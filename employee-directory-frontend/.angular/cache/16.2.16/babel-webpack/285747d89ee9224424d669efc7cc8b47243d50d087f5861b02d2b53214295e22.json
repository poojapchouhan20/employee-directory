{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nlet LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    // Injecting AuthService and Router\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      // Bound to login form inputs\n      this.username = '';\n      this.password = '';\n      // Used to show error message in the UI\n      this.error = '';\n    }\n    // Called when the login form is submitted\n    login() {\n      // Call the login method in AuthService and subscribe to the result\n      this.authService.login(this.username, this.password).subscribe({\n        next: res => {\n          // Log the full response from backend for debugging\n          console.log('Full login response:', res);\n          // Extract JWT token from the response (assumes it's named 'jwt')\n          console.log('Token received:', res.jwt);\n          const token = res.jwt;\n          if (token) {\n            // Save token to local storage for session persistence\n            localStorage.setItem('token', token);\n            console.log('Token saved in localStorage:', localStorage.getItem('token'));\n            // Navigate to the employee list page upon successful login\n            this.router.navigate(['/employees']);\n          } else {\n            // Handle case when token is not in the response\n            console.error('Token not found in response');\n            this.error = 'Login failed: token not received';\n          }\n        },\n        error: err => {\n          // Log error and show message to user\n          console.error('Login error:', err);\n          this.error = 'Invalid credentials';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 16,\n        vars: 4,\n        consts: [[2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"height\", \"100vh\", \"background\", \"linear-gradient(to right, #83a4d4, #b6fbff)\"], [2, \"background-color\", \"white\", \"padding\", \"40px 30px\", \"border-radius\", \"10px\", \"box-shadow\", \"0 8px 16px rgba(0,0,0,0.2)\", \"width\", \"350px\", \"text-align\", \"center\"], [2, \"margin-bottom\", \"10px\", \"color\", \"#2c3e50\"], [2, \"margin-bottom\", \"30px\", \"color\", \"#34495e\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [2, \"margin-bottom\", \"20px\"], [\"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\", \"ngModel\", \"\", 2, \"width\", \"100%\", \"padding\", \"12px\", \"border-radius\", \"5px\", \"border\", \"1px solid #ccc\", \"font-size\", \"16px\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", \"ngModel\", \"\", 2, \"width\", \"100%\", \"padding\", \"12px\", \"border-radius\", \"5px\", \"border\", \"1px solid #ccc\", \"font-size\", \"16px\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 2, \"width\", \"100%\", \"padding\", \"12px\", \"font-size\", \"16px\", \"background-color\", \"#2980b9\", \"color\", \"white\", \"border\", \"none\", \"border-radius\", \"5px\", \"cursor\", \"pointer\", 3, \"disabled\"], [\"style\", \"color: red\", 4, \"ngIf\"], [2, \"color\", \"red\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n            i0.ɵɵtext(3, \"Welcome to Employee Directory!\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"h2\", 3);\n            i0.ɵɵtext(5, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"form\", 4, 5);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n              return ctx.username = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"div\", 6)(11, \"input\", 8);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 6)(13, \"button\", 9);\n            i0.ɵɵtext(14, \" Login \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 10);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            const _r0 = i0.ɵɵreference(7);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngModel\", ctx.username);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.NgIf],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginComponent;\n})();\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}