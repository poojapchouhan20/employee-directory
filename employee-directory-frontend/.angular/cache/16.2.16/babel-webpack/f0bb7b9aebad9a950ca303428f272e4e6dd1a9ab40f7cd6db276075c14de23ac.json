{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.error);\n  }\n}\nlet LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.username = '';\n      this.password = '';\n      this.error = '';\n    }\n    login() {\n      this.authService.login(this.username, this.password).subscribe({\n        next: res => {\n          console.log('Full login response:', res); // Log entire response from backend\n          console.log('Token received:', res.jwt); // Log the token specifically (make sure it's `jwt`)\n          // Save token in localStorage directly here OR\n          // if you have a setToken method in authService, use it but ensure it saves 'jwt'\n          const token = res.jwt;\n          if (token) {\n            localStorage.setItem('token', token);\n            console.log('Token saved in localStorage:', localStorage.getItem('token'));\n            this.router.navigate(['/employees']);\n          } else {\n            console.error('Token not found in response');\n            this.error = 'Login failed: token not received';\n          }\n        },\n        error: err => {\n          console.error('Login error:', err); // Log any error returned from backend\n          this.error = 'Invalid credentials';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 13,\n        vars: 8,\n        consts: [[1, \"login-wrapper\"], [1, \"login-box\"], [\"novalidate\", \"\", 3, \"submit\"], [\"loginForm\", \"ngForm\"], [\"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"usernameInput\", \"ngModel\"], [\"name\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordInput\", \"ngModel\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n            i0.ɵɵtext(3, \"Welcome to Employee Directory\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 2, 3);\n            i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_4_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵelementStart(6, \"input\", 4, 5);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n              return ctx.username = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"input\", 6, 7);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"button\", 8);\n            i0.ɵɵtext(11, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 9);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            const _r0 = i0.ɵɵreference(5);\n            const _r1 = i0.ɵɵreference(7);\n            const _r2 = i0.ɵɵreference(9);\n            i0.ɵɵadvance(6);\n            i0.ɵɵclassProp(\"invalid\", _r1.invalid && _r1.touched);\n            i0.ɵɵproperty(\"ngModel\", ctx.username);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"invalid\", _r2.invalid && _r2.touched);\n            i0.ɵɵproperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", _r0.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.NgIf],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginComponent;\n})();\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}